services:
    # Nginx service
    web:
        image: nginx:alpine
        container_name: web
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ${WORKSPACE_PATH}:/var/www:cached
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/upstream.conf:/etc/nginx/conf.d/upstream.conf:ro
            - ./nginx/sites/:/etc/nginx/sites-available:ro
            - ./nginx/logs:/var/log/nginx
        depends_on:
            - php-fpm
        restart: always
        networks:
            - default

    #  PHP-FPM workspace for admin service
    php-fpm:
        build:
            context: ./php-fpm
            args:
                - PHP_VERSION=${PHP_VERSION}
                - NODEJS_VERSION=${NODEJS_VERSION}
                - TZ=${TIMEZONE}
        container_name: php-fpm
        ports:
            - "9000:9000"
        volumes:
            - ${WORKSPACE_PATH}:/var/www:cached
            - ./php-fpm/ini/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
            - ${SSH_KEY_PATH}:/root/.ssh/id_rsa
        tty: true
        networks:
            - default

    # PHP-Swoole workspace for api service
#:q

    # MySQL database service
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}
        container_name: mysql
        ports:
            - "${MYSQL_PORT}:3306"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - TZ=${TIMEZONE}
        volumes:
            - ./mysql/data:/var/lib/mysql
            - ./mysql/log:/var/log/mysql
            - ./mysql/config:/etc/mysql/conf.d
        networks:
            - default

    # Redis service
    redis:
        image: redis:latest
        container_name: redis
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - default

    # RabbitMQ service
#    rabbitmq:
#        build:
#            context: ./rabbitmq
#        container_name: rabbitmq
#        hostname: rabbitmq
#        ports:
#        - "5672:5672"
#        - "15672:15672"
#        - "25672:25672"
#        volumes:
#        - ./rabbitmq/data:/var/lib/rabbitmq
#        - ./rabbitmq/logs:/var/log/rabbitmq
#        - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
#        restart: always
#        networks:
#            - default

#    gitlab-runner:
#        build:
#            context: ./gitlab-runner
#        container_name: gitlab-runner
#        restart: always
#        volumes:
#            - ./gitlab-runner/config:/etc/gitlab-runner
#            - /var/run/docker.sock:/var/run/docker.sock
#        networks:
#            - default

#    elasticsearch:
#        image: elasticsearch:7.8.0
#        container_name: elastic
#        restart: always
#        environment:
#            # 开启内存锁定
#            - bootstrap.memory_lock=true
#            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#            # 指定单节点启动
#            - discovery.type=single-node
#        ulimits:
#            # 取消内存相关限制 用于开启内存锁定
#            memlock:
#                soft: -1
#                hard: -1
#        volumes:
#            - ./data:/usr/share/elasticsearch/data
#            - ./logs:/usr/share/elasticsearch/logs
#            - ./plugins:/usr/share/elasticsearch/plugins
#        ports:
#            - "9200:9200"
#        networks:
#          - default

networks:
    default:
        driver: bridge

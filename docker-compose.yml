version: "3.8"

services:
    # Nginx service
    nginx:
        image: nginx:alpine
        container_name: nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ${WORKSPACE_PATH}:/var/www
            - ./nginx/sites/:/etc/nginx/conf.d
            - ./nginx/logs:/var/log/nginx
        restart: always
        networks:
            - default

#    # PHP-FPM workspace for admin service
#    php5:
#        build:
#            context: ./php5
#        container_name: php5
#        volumes:
#            - ${WORKSPACE_PATH}:/var/www
#            - ./php5/www.conf:/usr/local/etc/php-fpm.d/www.conf
#        tty: true
#        networks:
#            - default

    # PHP-FPM workspace for admin service
    web:
        build:
            context: ./php-fpm
            args:
                - PHP_VERSION=${PHP_VERSION}
                - NODEJS_VERSION=${NODEJS_VERSION}
                - TZ=${TIMEZONE}
        container_name: web
        volumes:
            - ${WORKSPACE_PATH}:/var/www:cached
            - ./php-fpm/ini/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
        tty: true
        networks:
            - default

    # PHP-Swoole workspace for api service
    api:
        build:
            context: ./php-swoole
            args:
                - PHP_VERSION=${PHP_VERSION}
        container_name: api
        platform: linux/x86_64
        volumes:
            - ${WORKSPACE_PATH}:/var/www:cached
        ports:
            - "8000:8000"
            - "9500:9500"
            - "9501:9501"
            - "9502:9502"
        tty: true
        networks:
            - default

    # MySQL database service
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}
        container_name: mysql
        ports:
            - "${MYSQL_PORT}:3306"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - TZ=${TIMEZONE}
        volumes:
            - ./mysql/data:/var/lib/mysql
            - ./mysql/log:/var/log/mysql
            - ./mysql/config:/etc/mysql/conf.d
        networks:
            - default

    # Redis service
    redis:
        image: redis:latest
        container_name: redis
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - default

    # Redis-Cluster service
    redis-cluster:
        image: grokzen/redis-cluster:latest
        container_name: redis-cluster
        ports:
            - "${REDIS_CLUSTER_PORT_RANGE}:7000-7005"
        networks:
            - default

    clickhouse:
        image: yandex/clickhouse-server
        container_name: clickhouse
        platform: linux/x86_64
        ports:
            - "9000:9000"
        volumes:
            - ./clickhouse/data:/var/lib/clickhouse
            - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml
            - ./clickhouse/users.xml:/etc/clickhouse-server/users.xml
            - ./clickhouse/log:/var/log/clickhouse
        ulimits:
            nofile:
                soft: 262144
                hard: 262144
        networks:
            - default

    # RabbitMQ service
    rabbitmq:
        build:
            context: ./rabbitmq
        container_name: rabbitmq
        ports:
        - "5672:5672"
        - "15672:15672"
        - "25672:25672"
        volumes:
        - ./rabbitmq/data:/var/lib/rabbitmq
        - ./rabbitmq/logs:/var/log/rabbitmq
        - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
        restart: always
        networks:
            - default

networks:
    default:
        driver: bridge
